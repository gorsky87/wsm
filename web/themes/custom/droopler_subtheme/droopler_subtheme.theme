<?php

/**
 * @file
 * Functions to support theming in the droopler_subtheme theme.
 */

use Drupal\Core\Template\Attribute;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;


/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
// function droopler_subtheme_preprocess_html(&$variables) {
//
// }

/**
 * Check if current route is node with paragraphs or other defined route.
 *
 * @return bool
 *   True if it matches special criteria.
 */
function droopler_subtheme_is_special_route() {
  $route = \Drupal::routeMatch();
  $route_name = $route->getRouteName();
  $node = $route->getParameter('node');
  if (!empty($node) && !($node instanceof NodeInterface)) {
    $node = Node::load($node);
  }
  $node_check = (!empty($node) && in_array($node->getType(), [
      'content_page',
      'blog_post',
      'd_product',
      'projects'
    ]));
  $route_check = $route_name == 'd_p_subscribe_file.downloadfile.checkLink';

  return ($node_check || $route_check);
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function droopler_subtheme_preprocess_page(&$variables) {
  $variables['container'] ='container-fluid';

  $main_attributes = [
    'class' => ['container', 'py-4'],
    'id' => ['main'],
  ];
  $main_content_attributes = [
    'class' => ['col-12', 'main-content'],
  ];

  if (droopler_subtheme_is_special_route()) {
    $main_attributes['class'] = ['container-fluid'];
    $main_content_attributes['class'] = ['main-content'];
  }

  // Declare attributes.
  $variables['main_attributes'] = new Attribute($main_attributes);
  $variables['main_content_attributes'] = new Attribute($main_content_attributes);
}

/**
 * Implements hook_preprocess_HOOK() for block.
 */
function droopler_subtheme_preprocess_block(&$variables) {
  if ($variables['base_plugin_id'] == 'page_title_block') {
    $variables['show_title'] = droopler_subtheme_show_title_block();

    if (droopler_theme_is_special_route()) {
      $variables['attributes']['class'][] = 'container';
    }
  }
}

/**
 * Checks if title block should not be displayed.
 *
 * @return bool
 *   True if it matches special criteria.
 */
function droopler_subtheme_show_title_block() {
  $route = \Drupal::routeMatch();
  $route_name = $route->getRouteName();
  $node = $route->getParameter('node');
  if (!empty($node) && !($node instanceof NodeInterface)) {
    $node = Node::load($node);
  }
  $node_check = (!empty($node) && in_array($node->getType(), [
      'content_page',
      'blog_post',
      'projects'
    ]));
  $route_check = $route_name == 'view.blog_listing.page_1';

  return !($node_check || $route_check);
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
// function droopler_subtheme_preprocess_page_title(&$variables) {
//
// }

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
// function droopler_subtheme_preprocess_maintenance_page(&$variables) {
//
// }

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
// function droopler_subtheme_preprocess_node(&$variables) {
//
// }

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
// function droopler_subtheme_preprocess_block(&$variables) {
//
// }

/**
 * Implements hook_preprocess_HOOK() for form_element.
 */
// function droopler_subtheme_preprocess_form_element(&$variables) {
//
// }

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
// function droopler_subtheme_preprocess_menu(&$variables) {
//
// }

/**
 * Implements hook_preprocess_HOOK() for menu's local tasks.
 */
// function droopler_subtheme_preprocess_menu_local_task(&$variables) {
//
// }

/**
 * Implements hook_theme_suggestions_HOOK_alter() for links templates.
 */
// function droopler_subtheme_theme_suggestions_links_alter(array &$suggestions, array $variables) {
//
// }

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
// function droopler_subtheme_theme_suggestions_form_alter(array &$suggestions, array $variables) {
//
// }

/**
 * Implements hook_preprocess_input() to add classes to inputs.
 */
// function droopler_subtheme_preprocess_input(&$variables) {
//
// }


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function droopler_subtheme_theme_suggestions_user_alter(array &$suggestions, array $variables) {

  // Define the view mode.
  $mode = $variables['elements']['#view_mode'];

  // Create a theme hook suggestion which has the view mode name in it.
  $suggestions[] = 'user__' . $mode;

  // Get current user.
  $current_user = $variables['elements']['#user'];

  // Get current user's roles.
  $roles = $current_user->getRoles();

  // Add suggestion per role.
  foreach ($roles as $role) {
    $suggestions[] = 'user__' . $mode . '__' . $role;
  }
}
